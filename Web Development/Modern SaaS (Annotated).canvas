{
	"nodes":[
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.7.1 - Close Modal on Cancel.md","id":"5c77e1bbb77e12a7","x":2572,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.8 - Seeding Contacts.md","id":"2523fe9fbe84a25d","x":3017,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 2 Integrate SvelteKit and Supabase/2.1 Server-Side Environment.md","id":"191fdc33fec25314","x":-542,"y":-892,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 2 Integrate SvelteKit and Supabase/2.2 - Install Supabase SDKs & Generate Types.md","id":"606db52714de6f0d","x":-97,"y":-892,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 2 Integrate SvelteKit and Supabase/2.3 - Server-Side Supabase.md","id":"197e6cbe36a0147a","x":348,"y":-892,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 2 Integrate SvelteKit and Supabase/2.4 - Client-Side Supabase.md","id":"e4ab3dcd798e3783","x":793,"y":-892,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 1 Project Setup/1.1 - SvelteKit Project Setup.md","id":"4e0d8b15be3b317b","x":-542,"y":-1410,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 1 Project Setup/1.2 - Supabase Local Development.md","id":"5a34123b0ff1ac9f","x":-97,"y":-1410,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 1 Project Setup/1.3 Protected Auth Schema.md","id":"c6b6363866393ca3","x":348,"y":-1410,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 3 User Auth/3.4 - User Logout & Navigation.md","id":"d0a43cf73eacadc8","x":793,"y":-385,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 3 User Auth/3.3 - Protecting Auth Routes.md","id":"244773be5f2aefbf","x":348,"y":-385,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 3 User Auth/3.2 - User Login.md","id":"69311fe7aade82bc","x":-97,"y":-385,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 3 User Auth/3.1 - User Registration.md","id":"7e3dc5076685c816","x":-542,"y":-385,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 3 User Auth/3.5 - Account Page.md","id":"4486ecc313511b71","x":1240,"y":-385,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 3 User Auth/3.6 - Account Actions.md","id":"2f5e1c8eb0057db1","x":1680,"y":-385,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.7 - Deleting Contacts.md","id":"135719ecdef13ff9","x":2127,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.1 - Contacts Table & RLS Policies.md","id":"08e9fddf48d0aea3","x":-542,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.2 - Seeding Supabase.md","id":"0f876724d34a6637","x":-97,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.3 - Creating Contacts.md","id":"1690d18ec90e1c20","x":348,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.4 - Supabase Admin Client.md","id":"2656758311fe6a36","x":793,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.5 - Reading Contacts.md","id":"15ab0a1d8f8aa716","x":1240,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 4 CRUD (Create, Read, Update & Delete)/4.6 - Updating Contacts.md","id":"a6560a132824c7ce","x":1680,"y":171,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 11 Testing/11.1 - Setup Playwright.md","id":"04ff495447e5e863","x":-542,"y":720,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 11 Testing/11.2 - Auth Flow Tests.md","id":"fbd954c76d5d3585","x":-97,"y":720,"width":400,"height":400},
		{"type":"file","file":"Web Development/Modern SaaS Apps with SvelteKit, Stripe, & Supabase/Module 11 Testing/11.3 - CRUD Tests.md","id":"4ff26026a80f4340","x":348,"y":720,"width":400,"height":400},
		{"type":"text","text":"# Forms template \n\n##### in src/lib/schemas.ts\n```typescript\n// ... include other schemas ...\nconst aSchema = z.object({\n  myinput: z.string().min(10, \"Please enter valid input\"),\n});\n```\n##### in **+page.server.ts**\n```typescript\nimport { z } from \"zod\";\nimport { setError, superValidate } from \"sveltekit-superforms/server\";\nimport type { Actions, PageServerLoad } from \"./$types\";\nimport { fail, redirect } from \"@sveltejs/kit\";\nimport { aSchema } from \"$lib/schemas\";\n\nexport const load: PageServerLoad = async (event) => {\n  return {\n    form: superValidate(aSchema),\n  };\n};\n\nexport const actions: Actions = {\n  // If there is only one action on the page, \n  // 'nonDefaultAction' should be named 'default'\n  // see below in +page.svelte\n  nonDefaultAction: async (event) => {\n    const form = await superValidate(event, aSchema);\n\n    if (!form.valid) {\n      return fail(400, {\n        form,\n      });\n    }\n\n    const { error: anError } = await doSomething(form.data); \n    // maybe: event.locals.doSomething\n\n    if (anError) {\n      if (anError.status === 400) {\n        setError(form, \"myinput\", \"Invalid input\");\n        return fail(400, {\n          form,\n        });\n      }\n    }\n\n    throw redirect(302, \"/\");\n  },\n};\n```\n##### in **+page.svelte**\n\n```typescript\n<script lang=\"ts\">\n  import { superForm } from \"sveltekit-superforms/client\";\n  import type { PageData } from \"./$types\";\n  export let data: PageData;\n  const { form, errors, enhance } = superForm(data.form);\n</script>\n\n<!-- No 'action=\"/?nonDefaultAction\"' needed if there is only one action on the page -->\n<form method=\"POST\" action=\"/?nonDefaultAction\" use:enhance>\n  <label for=\"myinput\">\n    <span>Form Input Name</span>\n    <input type=\"text\" name=\"myinput\" bind:value={$form.myinput} />\n    {#if $errors.myinput}\n      <span>{$errors.myinput}</span>\n    {/if}\n  </label> \n  <Button type=\"submit\">Form Action Name</Button>\n</form>","id":"27aa61168f713472","x":2468,"y":-1920,"width":832,"height":1690,"color":"1"},
		{"type":"text","text":"# schemas.ts\n#### src/lib/schemas.ts\n```typescript\n// src/lib/schemas.ts\nimport { z } from \"zod\";\n\nexport const registerUserSchema = z.object({\n  full_name: z.string().max(140, \"Name must be 140 characters or less\").nullish(),\n  email: z.string().email(\"Invalid email address\"),\n  password: z\n    .string()\n    .min(6, \"Password must be at least 6 characters\")\n    .max(64, \"Password must be 64 characters or less\"),\n  passwordConfirm: z\n    .string()\n    .min(6, \"Password must be at least 6 characters\")\n    .max(64, \"Password must be 64 characters or less\"),\n});\n\nexport const profileSchema = registerUserSchema.pick({ full_name: true });\nexport type ProfileSchema = typeof profileSchema;\n\nexport const emailSchema = registerUserSchema.pick({ email: true });\nexport type EmailSchema = typeof emailSchema;\n\nexport const passwordSchema = registerUserSchema.pick({ password: true, passwordConfirm: true });\nexport type PasswordSchema = typeof passwordSchema;\n\nexport const createContactSchema = z\n  .object({\n    name: z.string().max(140, \"Name must be 140 characters or less\").nullish(),\n    email: z.string().email(\"Invalid email address\").nullish(),\n    company: z.string().max(140, \"Company must be 140 characters or less\").nullish(),\n    phone: z.string().max(64, \"Phone must be 140 characters or less\").nullish(),\n  })\n  .refine(({ name, email, company, phone }) => {\n    return name || email || company || phone;\n  }, \"At least one field must be filled out\");\nexport type CreateContactSchema = typeof createContactSchema;\n\nexport const deleteContactSchema = z.object({\n  id: z.string(),\n});\nexport type DeleteContactSchema = typeof deleteContactSchema;\n```\n","id":"f29128648c5dfcc9","x":1488,"y":-1920,"width":945,"height":1020,"color":"1"},
		{"type":"text","text":"# All package (dev-) dependencies\n---\n* All packages that run on a (server-side) endpoint must be **dependencies**. Code that runs client-side (or only in development) should be **dev-dependencies** ([SvelteKit>Node Severs>Deploying](https://kit.svelte.dev/docs/adapter-node#deploying),[SvelteKit>Project Structure>package.json](https://kit.svelte.dev/docs/project-structure),  [Stack Overflow](https://stackoverflow.com/questions/68190803/should-a-svelte-package-be-a-dependency-or-a-devdependency)).\n\n```shell\npnpm i dotenv @supabase/supabase-js @supabase/auth-helpers-sveltekit sveltekit-superforms zod\n\npnpm i supabase tsx detect-port @types/detect-port pg @types/pg @faker-js/faker -D\n```\n\n```shell\npnpx playwright install --with-deps\n```\n \n\n","id":"b363e3118c4821ea","x":548,"y":-1920,"width":908,"height":390,"color":"1"},
		{"id":"78f8df157b86cb08","type":"text","text":"# Icons\n---\n#### Use [https://iconify.design](Iconify) or similar svg icon site\n* In src/lib/components/icons:\n\t* Create <Icon_name>.svelte (i.e., ChevronIcon.svelte) and add                                                   the svg code for the icon of your choice.\n```typescript\n// src/lib/components/icons/ChevronIcon.svg\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t<path\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\tstroke-width=\"2\"\n\t\td=\"m16 13l-4 4l-4-4m8-6l-4 4l-4-4\"\n\t/>\n</svg>\n```\n* Create index.ts and add:\n```typescript\nimport ChevronIcon from \"./Chevron.svelte\";\nexport { ChevronIcon };\n```\n* In +page.svelte add:\n```typescript\n<script lang=\"ts\">\n\timport { ChevronIcon } from \"$lib/components/icons\";\n</script>\n\n<ChevronIcon />\n```","x":-1600,"y":-1410,"width":942,"height":770,"color":"1"}
	],
	"edges":[
		{"id":"810322626b7afb57","fromNode":"4e0d8b15be3b317b","fromSide":"right","toNode":"5a34123b0ff1ac9f","toSide":"left"},
		{"id":"f4e585e1db14b2ac","fromNode":"5a34123b0ff1ac9f","fromSide":"right","toNode":"c6b6363866393ca3","toSide":"left"},
		{"id":"e5e0e52af6c5c6e5","fromNode":"191fdc33fec25314","fromSide":"right","toNode":"606db52714de6f0d","toSide":"left"},
		{"id":"6845d019ea751484","fromNode":"606db52714de6f0d","fromSide":"right","toNode":"197e6cbe36a0147a","toSide":"left"},
		{"id":"44d5dc3713fd458a","fromNode":"197e6cbe36a0147a","fromSide":"right","toNode":"e4ab3dcd798e3783","toSide":"left"},
		{"id":"99fd697f4b652d99","fromNode":"7e3dc5076685c816","fromSide":"right","toNode":"69311fe7aade82bc","toSide":"left"},
		{"id":"3d07d74f5b5542ea","fromNode":"69311fe7aade82bc","fromSide":"right","toNode":"244773be5f2aefbf","toSide":"left"},
		{"id":"be09c5a2e8fc81fe","fromNode":"244773be5f2aefbf","fromSide":"right","toNode":"d0a43cf73eacadc8","toSide":"left"},
		{"id":"5ed7f03636d68765","fromNode":"d0a43cf73eacadc8","fromSide":"right","toNode":"4486ecc313511b71","toSide":"left"},
		{"id":"14e13b61cdbb39f5","fromNode":"4486ecc313511b71","fromSide":"right","toNode":"2f5e1c8eb0057db1","toSide":"left"},
		{"id":"6e2ebf1d40b270db","fromNode":"08e9fddf48d0aea3","fromSide":"right","toNode":"0f876724d34a6637","toSide":"left"},
		{"id":"9f7e7f5703328d7a","fromNode":"0f876724d34a6637","fromSide":"right","toNode":"1690d18ec90e1c20","toSide":"left"},
		{"id":"ab4d33a90db7111f","fromNode":"1690d18ec90e1c20","fromSide":"right","toNode":"2656758311fe6a36","toSide":"left"},
		{"id":"799ea21074605ed6","fromNode":"2656758311fe6a36","fromSide":"right","toNode":"15ab0a1d8f8aa716","toSide":"left"},
		{"id":"2e52d4a03d8b9339","fromNode":"15ab0a1d8f8aa716","fromSide":"right","toNode":"a6560a132824c7ce","toSide":"left"},
		{"id":"7ab863b4feb59b8e","fromNode":"a6560a132824c7ce","fromSide":"right","toNode":"135719ecdef13ff9","toSide":"left"},
		{"id":"cb1356e9659f415d","fromNode":"135719ecdef13ff9","fromSide":"right","toNode":"5c77e1bbb77e12a7","toSide":"left"},
		{"id":"334d98e7eaaeb040","fromNode":"5c77e1bbb77e12a7","fromSide":"right","toNode":"2523fe9fbe84a25d","toSide":"left"},
		{"id":"eb49c45f0604b510","fromNode":"04ff495447e5e863","fromSide":"right","toNode":"fbd954c76d5d3585","toSide":"left"},
		{"id":"9a59a4967fcdc9fc","fromNode":"fbd954c76d5d3585","fromSide":"right","toNode":"4ff26026a80f4340","toSide":"left"}
	]
}